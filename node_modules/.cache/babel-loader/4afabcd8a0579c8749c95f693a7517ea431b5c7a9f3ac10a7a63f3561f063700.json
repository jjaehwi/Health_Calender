{"ast":null,"code":"var n,\n  l,\n  u,\n  i,\n  t,\n  r,\n  o,\n  f,\n  e,\n  c = {},\n  s = [],\n  a = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\nfunction h(n, l) {\n  for (var u in l) n[u] = l[u];\n  return n;\n}\nfunction v(n) {\n  var l = n.parentNode;\n  l && l.removeChild(n);\n}\nfunction y(l, u, i) {\n  var t,\n    r,\n    o,\n    f = {};\n  for (o in u) \"key\" == o ? t = u[o] : \"ref\" == o ? r = u[o] : f[o] = u[o];\n  if (arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : i), \"function\" == typeof l && null != l.defaultProps) for (o in l.defaultProps) void 0 === f[o] && (f[o] = l.defaultProps[o]);\n  return p(l, f, t, r, null);\n}\nfunction p(n, i, t, r, o) {\n  var f = {\n    type: n,\n    props: i,\n    key: t,\n    ref: r,\n    __k: null,\n    __: null,\n    __b: 0,\n    __e: null,\n    __d: void 0,\n    __c: null,\n    __h: null,\n    constructor: void 0,\n    __v: null == o ? ++u : o\n  };\n  return null == o && null != l.vnode && l.vnode(f), f;\n}\nfunction d() {\n  return {\n    current: null\n  };\n}\nfunction _(n) {\n  return n.children;\n}\nfunction k(n, l, u, i, t) {\n  var r;\n  for (r in u) \"children\" === r || \"key\" === r || r in l || g(n, r, null, u[r], i);\n  for (r in l) t && \"function\" != typeof l[r] || \"children\" === r || \"key\" === r || \"value\" === r || \"checked\" === r || u[r] === l[r] || g(n, r, l[r], u[r], i);\n}\nfunction b(n, l, u) {\n  \"-\" === l[0] ? n.setProperty(l, null == u ? \"\" : u) : n[l] = null == u ? \"\" : \"number\" != typeof u || a.test(l) ? u : u + \"px\";\n}\nfunction g(n, l, u, i, t) {\n  var r;\n  n: if (\"style\" === l) {\n    if (\"string\" == typeof u) n.style.cssText = u;else {\n      if (\"string\" == typeof i && (n.style.cssText = i = \"\"), i) for (l in i) u && l in u || b(n.style, l, \"\");\n      if (u) for (l in u) i && u[l] === i[l] || b(n.style, l, u[l]);\n    }\n  } else if (\"o\" === l[0] && \"n\" === l[1]) r = l !== (l = l.replace(/Capture$/, \"\")), l = l.toLowerCase() in n ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + r] = u, u ? i || n.addEventListener(l, r ? w : m, r) : n.removeEventListener(l, r ? w : m, r);else if (\"dangerouslySetInnerHTML\" !== l) {\n    if (t) l = l.replace(/xlink(H|:h)/, \"h\").replace(/sName$/, \"s\");else if (\"width\" !== l && \"height\" !== l && \"href\" !== l && \"list\" !== l && \"form\" !== l && \"tabIndex\" !== l && \"download\" !== l && l in n) try {\n      n[l] = null == u ? \"\" : u;\n      break n;\n    } catch (n) {}\n    \"function\" == typeof u || (null == u || !1 === u && -1 == l.indexOf(\"-\") ? n.removeAttribute(l) : n.setAttribute(l, u));\n  }\n}\nfunction m(n) {\n  t = !0;\n  try {\n    return this.l[n.type + !1](l.event ? l.event(n) : n);\n  } finally {\n    t = !1;\n  }\n}\nfunction w(n) {\n  t = !0;\n  try {\n    return this.l[n.type + !0](l.event ? l.event(n) : n);\n  } finally {\n    t = !1;\n  }\n}\nfunction x(n, l) {\n  this.props = n, this.context = l;\n}\nfunction A(n, l) {\n  if (null == l) return n.__ ? A(n.__, n.__.__k.indexOf(n) + 1) : null;\n  for (var u; l < n.__k.length; l++) if (null != (u = n.__k[l]) && null != u.__e) return u.__e;\n  return \"function\" == typeof n.type ? A(n) : null;\n}\nfunction P(n) {\n  var l, u;\n  if (null != (n = n.__) && null != n.__c) {\n    for (n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++) if (null != (u = n.__k[l]) && null != u.__e) {\n      n.__e = n.__c.base = u.__e;\n      break;\n    }\n    return P(n);\n  }\n}\nfunction C(n) {\n  t ? setTimeout(n) : f(n);\n}\nfunction T(n) {\n  (!n.__d && (n.__d = !0) && r.push(n) && !$.__r++ || o !== l.debounceRendering) && ((o = l.debounceRendering) || C)($);\n}\nfunction $() {\n  var n, l, u, i, t, o, f, e;\n  for (r.sort(function (n, l) {\n    return n.__v.__b - l.__v.__b;\n  }); n = r.shift();) n.__d && (l = r.length, i = void 0, t = void 0, f = (o = (u = n).__v).__e, (e = u.__P) && (i = [], (t = h({}, o)).__v = o.__v + 1, M(e, o, t, u.__n, void 0 !== e.ownerSVGElement, null != o.__h ? [f] : null, i, null == f ? A(o) : f, o.__h), N(i, o), o.__e != f && P(o)), r.length > l && r.sort(function (n, l) {\n    return n.__v.__b - l.__v.__b;\n  }));\n  $.__r = 0;\n}\nfunction H(n, l, u, i, t, r, o, f, e, a) {\n  var h,\n    v,\n    y,\n    d,\n    k,\n    b,\n    g,\n    m = i && i.__k || s,\n    w = m.length;\n  for (u.__k = [], h = 0; h < l.length; h++) if (null != (d = u.__k[h] = null == (d = l[h]) || \"boolean\" == typeof d ? null : \"string\" == typeof d || \"number\" == typeof d || \"bigint\" == typeof d ? p(null, d, null, null, d) : Array.isArray(d) ? p(_, {\n    children: d\n  }, null, null, null) : d.__b > 0 ? p(d.type, d.props, d.key, d.ref ? d.ref : null, d.__v) : d)) {\n    if (d.__ = u, d.__b = u.__b + 1, null === (y = m[h]) || y && d.key == y.key && d.type === y.type) m[h] = void 0;else for (v = 0; v < w; v++) {\n      if ((y = m[v]) && d.key == y.key && d.type === y.type) {\n        m[v] = void 0;\n        break;\n      }\n      y = null;\n    }\n    M(n, d, y = y || c, t, r, o, f, e, a), k = d.__e, (v = d.ref) && y.ref != v && (g || (g = []), y.ref && g.push(y.ref, null, d), g.push(v, d.__c || k, d)), null != k ? (null == b && (b = k), \"function\" == typeof d.type && d.__k === y.__k ? d.__d = e = I(d, e, n) : e = z(n, d, y, m, k, e), \"function\" == typeof u.type && (u.__d = e)) : e && y.__e == e && e.parentNode != n && (e = A(y));\n  }\n  for (u.__e = b, h = w; h--;) null != m[h] && (\"function\" == typeof u.type && null != m[h].__e && m[h].__e == u.__d && (u.__d = L(i).nextSibling), q(m[h], m[h]));\n  if (g) for (h = 0; h < g.length; h++) S(g[h], g[++h], g[++h]);\n}\nfunction I(n, l, u) {\n  for (var i, t = n.__k, r = 0; t && r < t.length; r++) (i = t[r]) && (i.__ = n, l = \"function\" == typeof i.type ? I(i, l, u) : z(u, i, i, t, i.__e, l));\n  return l;\n}\nfunction j(n, l) {\n  return l = l || [], null == n || \"boolean\" == typeof n || (Array.isArray(n) ? n.some(function (n) {\n    j(n, l);\n  }) : l.push(n)), l;\n}\nfunction z(n, l, u, i, t, r) {\n  var o, f, e;\n  if (void 0 !== l.__d) o = l.__d, l.__d = void 0;else if (null == u || t != r || null == t.parentNode) n: if (null == r || r.parentNode !== n) n.appendChild(t), o = null;else {\n    for (f = r, e = 0; (f = f.nextSibling) && e < i.length; e += 1) if (f == t) break n;\n    n.insertBefore(t, r), o = r;\n  }\n  return void 0 !== o ? o : t.nextSibling;\n}\nfunction L(n) {\n  var l, u, i;\n  if (null == n.type || \"string\" == typeof n.type) return n.__e;\n  if (n.__k) for (l = n.__k.length - 1; l >= 0; l--) if ((u = n.__k[l]) && (i = L(u))) return i;\n  return null;\n}\nfunction M(n, u, i, t, r, o, f, e, c) {\n  var s,\n    a,\n    v,\n    y,\n    p,\n    d,\n    k,\n    b,\n    g,\n    m,\n    w,\n    A,\n    P,\n    C,\n    T,\n    $ = u.type;\n  if (void 0 !== u.constructor) return null;\n  null != i.__h && (c = i.__h, e = u.__e = i.__e, u.__h = null, o = [e]), (s = l.__b) && s(u);\n  try {\n    n: if (\"function\" == typeof $) {\n      if (b = u.props, g = (s = $.contextType) && t[s.__c], m = s ? g ? g.props.value : s.__ : t, i.__c ? k = (a = u.__c = i.__c).__ = a.__E : (\"prototype\" in $ && $.prototype.render ? u.__c = a = new $(b, m) : (u.__c = a = new x(b, m), a.constructor = $, a.render = B), g && g.sub(a), a.props = b, a.state || (a.state = {}), a.context = m, a.__n = t, v = a.__d = !0, a.__h = [], a._sb = []), null == a.__s && (a.__s = a.state), null != $.getDerivedStateFromProps && (a.__s == a.state && (a.__s = h({}, a.__s)), h(a.__s, $.getDerivedStateFromProps(b, a.__s))), y = a.props, p = a.state, a.__v = u, v) null == $.getDerivedStateFromProps && null != a.componentWillMount && a.componentWillMount(), null != a.componentDidMount && a.__h.push(a.componentDidMount);else {\n        if (null == $.getDerivedStateFromProps && b !== y && null != a.componentWillReceiveProps && a.componentWillReceiveProps(b, m), !a.__e && null != a.shouldComponentUpdate && !1 === a.shouldComponentUpdate(b, a.__s, m) || u.__v === i.__v) {\n          for (u.__v !== i.__v && (a.props = b, a.state = a.__s, a.__d = !1), u.__e = i.__e, u.__k = i.__k, u.__k.forEach(function (n) {\n            n && (n.__ = u);\n          }), w = 0; w < a._sb.length; w++) a.__h.push(a._sb[w]);\n          a._sb = [], a.__h.length && f.push(a);\n          break n;\n        }\n        null != a.componentWillUpdate && a.componentWillUpdate(b, a.__s, m), null != a.componentDidUpdate && a.__h.push(function () {\n          a.componentDidUpdate(y, p, d);\n        });\n      }\n      if (a.context = m, a.props = b, a.__P = n, A = l.__r, P = 0, \"prototype\" in $ && $.prototype.render) {\n        for (a.state = a.__s, a.__d = !1, A && A(u), s = a.render(a.props, a.state, a.context), C = 0; C < a._sb.length; C++) a.__h.push(a._sb[C]);\n        a._sb = [];\n      } else do {\n        a.__d = !1, A && A(u), s = a.render(a.props, a.state, a.context), a.state = a.__s;\n      } while (a.__d && ++P < 25);\n      a.state = a.__s, null != a.getChildContext && (t = h(h({}, t), a.getChildContext())), v || null == a.getSnapshotBeforeUpdate || (d = a.getSnapshotBeforeUpdate(y, p)), T = null != s && s.type === _ && null == s.key ? s.props.children : s, H(n, Array.isArray(T) ? T : [T], u, i, t, r, o, f, e, c), a.base = u.__e, u.__h = null, a.__h.length && f.push(a), k && (a.__E = a.__ = null), a.__e = !1;\n    } else null == o && u.__v === i.__v ? (u.__k = i.__k, u.__e = i.__e) : u.__e = O(i.__e, u, i, t, r, o, f, c);\n    (s = l.diffed) && s(u);\n  } catch (n) {\n    u.__v = null, (c || null != o) && (u.__e = e, u.__h = !!c, o[o.indexOf(e)] = null), l.__e(n, u, i);\n  }\n}\nfunction N(n, u) {\n  l.__c && l.__c(u, n), n.some(function (u) {\n    try {\n      n = u.__h, u.__h = [], n.some(function (n) {\n        n.call(u);\n      });\n    } catch (n) {\n      l.__e(n, u.__v);\n    }\n  });\n}\nfunction O(l, u, i, t, r, o, f, e) {\n  var s,\n    a,\n    h,\n    y = i.props,\n    p = u.props,\n    d = u.type,\n    _ = 0;\n  if (\"svg\" === d && (r = !0), null != o) for (; _ < o.length; _++) if ((s = o[_]) && \"setAttribute\" in s == !!d && (d ? s.localName === d : 3 === s.nodeType)) {\n    l = s, o[_] = null;\n    break;\n  }\n  if (null == l) {\n    if (null === d) return document.createTextNode(p);\n    l = r ? document.createElementNS(\"http://www.w3.org/2000/svg\", d) : document.createElement(d, p.is && p), o = null, e = !1;\n  }\n  if (null === d) y === p || e && l.data === p || (l.data = p);else {\n    if (o = o && n.call(l.childNodes), a = (y = i.props || c).dangerouslySetInnerHTML, h = p.dangerouslySetInnerHTML, !e) {\n      if (null != o) for (y = {}, _ = 0; _ < l.attributes.length; _++) y[l.attributes[_].name] = l.attributes[_].value;\n      (h || a) && (h && (a && h.__html == a.__html || h.__html === l.innerHTML) || (l.innerHTML = h && h.__html || \"\"));\n    }\n    if (k(l, p, y, r, e), h) u.__k = [];else if (_ = u.props.children, H(l, Array.isArray(_) ? _ : [_], u, i, t, r && \"foreignObject\" !== d, o, f, o ? o[0] : i.__k && A(i, 0), e), null != o) for (_ = o.length; _--;) null != o[_] && v(o[_]);\n    e || (\"value\" in p && void 0 !== (_ = p.value) && (_ !== l.value || \"progress\" === d && !_ || \"option\" === d && _ !== y.value) && g(l, \"value\", _, y.value, !1), \"checked\" in p && void 0 !== (_ = p.checked) && _ !== l.checked && g(l, \"checked\", _, y.checked, !1));\n  }\n  return l;\n}\nfunction S(n, u, i) {\n  try {\n    \"function\" == typeof n ? n(u) : n.current = u;\n  } catch (n) {\n    l.__e(n, i);\n  }\n}\nfunction q(n, u, i) {\n  var t, r;\n  if (l.unmount && l.unmount(n), (t = n.ref) && (t.current && t.current !== n.__e || S(t, null, u)), null != (t = n.__c)) {\n    if (t.componentWillUnmount) try {\n      t.componentWillUnmount();\n    } catch (n) {\n      l.__e(n, u);\n    }\n    t.base = t.__P = null, n.__c = void 0;\n  }\n  if (t = n.__k) for (r = 0; r < t.length; r++) t[r] && q(t[r], u, i || \"function\" != typeof n.type);\n  i || null == n.__e || v(n.__e), n.__ = n.__e = n.__d = void 0;\n}\nfunction B(n, l, u) {\n  return this.constructor(n, u);\n}\nfunction D(u, i, t) {\n  var r, o, f;\n  l.__ && l.__(u, i), o = (r = \"function\" == typeof t) ? null : t && t.__k || i.__k, f = [], M(i, u = (!r && t || i).__k = y(_, null, [u]), o || c, c, void 0 !== i.ownerSVGElement, !r && t ? [t] : o ? null : i.firstChild ? n.call(i.childNodes) : null, f, !r && t ? t : o ? o.__e : i.firstChild, r), N(f, u);\n}\nfunction E(n, l) {\n  D(n, l, E);\n}\nfunction F(l, u, i) {\n  var t,\n    r,\n    o,\n    f = h({}, l.props);\n  for (o in u) \"key\" == o ? t = u[o] : \"ref\" == o ? r = u[o] : f[o] = u[o];\n  return arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : i), p(l.type, f, t || l.key, r || l.ref, null);\n}\nfunction G(n, l) {\n  var u = {\n    __c: l = \"__cC\" + e++,\n    __: n,\n    Consumer: function (n, l) {\n      return n.children(l);\n    },\n    Provider: function (n) {\n      var u, i;\n      return this.getChildContext || (u = [], (i = {})[l] = this, this.getChildContext = function () {\n        return i;\n      }, this.shouldComponentUpdate = function (n) {\n        this.props.value !== n.value && u.some(function (n) {\n          n.__e = !0, T(n);\n        });\n      }, this.sub = function (n) {\n        u.push(n);\n        var l = n.componentWillUnmount;\n        n.componentWillUnmount = function () {\n          u.splice(u.indexOf(n), 1), l && l.call(n);\n        };\n      }), n.children;\n    }\n  };\n  return u.Provider.__ = u.Consumer.contextType = u;\n}\nn = s.slice, l = {\n  __e: function (n, l, u, i) {\n    for (var t, r, o; l = l.__;) if ((t = l.__c) && !t.__) try {\n      if ((r = t.constructor) && null != r.getDerivedStateFromError && (t.setState(r.getDerivedStateFromError(n)), o = t.__d), null != t.componentDidCatch && (t.componentDidCatch(n, i || {}), o = t.__d), o) return t.__E = t;\n    } catch (l) {\n      n = l;\n    }\n    throw n;\n  }\n}, u = 0, i = function (n) {\n  return null != n && void 0 === n.constructor;\n}, t = !1, x.prototype.setState = function (n, l) {\n  var u;\n  u = null != this.__s && this.__s !== this.state ? this.__s : this.__s = h({}, this.state), \"function\" == typeof n && (n = n(h({}, u), this.props)), n && h(u, n), null != n && this.__v && (l && this._sb.push(l), T(this));\n}, x.prototype.forceUpdate = function (n) {\n  this.__v && (this.__e = !0, n && this.__h.push(n), T(this));\n}, x.prototype.render = _, r = [], f = \"function\" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, $.__r = 0, e = 0;\nexport { x as Component, _ as Fragment, F as cloneElement, G as createContext, y as createElement, d as createRef, y as h, E as hydrate, i as isValidElement, l as options, D as render, j as toChildArray };","map":{"version":3,"mappings":"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","names":["slice","options","vnodeId","isValidElement","inEvent","rerenderQueue","prevDebounce","microTick","i","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","removeNode","node","parentNode","removeChild","createElement","type","children","key","ref","normalizedProps","arguments","length","call","defaultProps","undefined","createVNode","original","vnode","__k","__","__b","__e","__d","__c","__h","constructor","__v","createRef","current","Fragment","diffProps","dom","newProps","oldProps","isSvg","hydrate","setProperty","setStyle","style","value","test","name","oldValue","useCapture","o","cssText","replace","toLowerCase","l","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","indexOf","removeAttribute","setAttribute","this","event","Component","context","getDomSibling","childIndex","sibling","updateParentDomPointers","child","base","defer","cb","setTimeout","enqueueRender","c","push","process","debounceRendering","renderQueueLength","component","commitQueue","oldVNode","oldDom","parentDom","sort","a","b","shift","__P","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","Array","isArray","reorderChildren","placeChild","getLastDom","nextSibling","unmount","applyRef","tmp","toChildArray","out","some","nextDom","sibDom","outer","appendChild","insertBefore","lastDom","newVNode","isNew","oldState","snapshot","clearProcessingException","provider","componentContext","renderHook","count","newType","contextType","__E","prototype","render","doRender","sub","state","getDerivedStateFromProps","__s","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","_sb","componentWillUpdate","componentDidUpdate","__r","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","diffed","root","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","innerHTML","checked","parentVNode","skipRemove","r","componentWillUnmount","replaceNode","firstChild","cloneElement","createContext","defaultValue","contextId","Consumer","contextValue","Provider","subs","ctx","_props","old","splice","error","errorInfo","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","s","forceUpdate","Promise","then","bind","resolve"],"sources":["/Users/hwi/GIT/Health_Calender/node_modules/preact/src/util.js","/Users/hwi/GIT/Health_Calender/node_modules/preact/src/options.js","/Users/hwi/GIT/Health_Calender/node_modules/preact/src/create-element.js","/Users/hwi/GIT/Health_Calender/node_modules/preact/src/diff/props.js","/Users/hwi/GIT/Health_Calender/node_modules/preact/src/component.js","/Users/hwi/GIT/Health_Calender/node_modules/preact/src/create-context.js","/Users/hwi/GIT/Health_Calender/node_modules/preact/src/constants.js","/Users/hwi/GIT/Health_Calender/node_modules/preact/src/diff/children.js","/Users/hwi/GIT/Health_Calender/node_modules/preact/src/diff/index.js","/Users/hwi/GIT/Health_Calender/node_modules/preact/src/render.js","/Users/hwi/GIT/Health_Calender/node_modules/preact/src/clone-element.js","/Users/hwi/GIT/Health_Calender/node_modules/preact/src/diff/catch-error.js"],"sourcesContent":["import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\nexport let inEvent = false;\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tinEvent = true;\n\ttry {\n\t\treturn this._listeners[e.type + false](\n\t\t\toptions.event ? options.event(e) : e\n\t\t);\n\t} finally {\n\t\tinEvent = false;\n\t}\n}\n\nfunction eventProxyCapture(e) {\n\tinEvent = true;\n\ttry {\n\t\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n\t} finally {\n\t\tinEvent = false;\n\t}\n}\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { inEvent } from './diff/props';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst microTick =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\nfunction defer(cb) {\n\tif (inEvent) {\n\t\tsetTimeout(cb);\n\t} else {\n\t\tmicroTick(cb);\n\t}\n}\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {import('./internal').Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}